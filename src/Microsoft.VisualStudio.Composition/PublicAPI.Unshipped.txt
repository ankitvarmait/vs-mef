Microsoft.VisualStudio.Composition.ComposablePartDefinition.ComposablePartDefinition(Microsoft.VisualStudio.Composition.Reflection.TypeRef! partType, System.Collections.Generic.IReadOnlyDictionary<string!, object?>! metadata, System.Collections.Generic.IReadOnlyCollection<Microsoft.VisualStudio.Composition.ExportDefinition!>! exportedTypes, System.Collections.Generic.IReadOnlyDictionary<Microsoft.VisualStudio.Composition.Reflection.MemberRef!, System.Collections.Generic.IReadOnlyCollection<Microsoft.VisualStudio.Composition.ExportDefinition!>!>! exportingMembers, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Composition.ImportDefinitionBinding!>! importingMembers, string? sharingBoundary, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.Reflection.MethodRef!>! onImportsSatisfiedMethods, Microsoft.VisualStudio.Composition.Reflection.MethodRef? importingConstructorRef, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.ImportDefinitionBinding!>? importingConstructorImports, Microsoft.VisualStudio.Composition.CreationPolicy partCreationPolicy) -> void
Microsoft.VisualStudio.Composition.ComposablePartDefinition.ComposablePartDefinition(Microsoft.VisualStudio.Composition.Reflection.TypeRef! partType, System.Collections.Generic.IReadOnlyDictionary<string!, object?>! metadata, System.Collections.Generic.IReadOnlyCollection<Microsoft.VisualStudio.Composition.ExportDefinition!>! exportedTypes, System.Collections.Generic.IReadOnlyDictionary<Microsoft.VisualStudio.Composition.Reflection.MemberRef!, System.Collections.Generic.IReadOnlyCollection<Microsoft.VisualStudio.Composition.ExportDefinition!>!>! exportingMembers, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Composition.ImportDefinitionBinding!>! importingMembers, string? sharingBoundary, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.Reflection.MethodRef!>! onImportsSatisfiedMethods, Microsoft.VisualStudio.Composition.Reflection.MethodRef? importingConstructorRef, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.ImportDefinitionBinding!>? importingConstructorImports, Microsoft.VisualStudio.Composition.CreationPolicy partCreationPolicy, bool isSharingBoundaryInferred) -> void
Microsoft.VisualStudio.Composition.ComposablePartDefinition.ComposablePartDefinition(Microsoft.VisualStudio.Composition.Reflection.TypeRef! partType, System.Collections.Generic.IReadOnlyDictionary<string!, object?>! metadata, System.Collections.Generic.IReadOnlyCollection<Microsoft.VisualStudio.Composition.ExportDefinition!>! exportedTypes, System.Collections.Generic.IReadOnlyDictionary<Microsoft.VisualStudio.Composition.Reflection.MemberRef!, System.Collections.Generic.IReadOnlyCollection<Microsoft.VisualStudio.Composition.ExportDefinition!>!>! exportingMembers, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Composition.ImportDefinitionBinding!>! importingMembers, string? sharingBoundary, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.Reflection.MethodRef!>! onImportsSatisfiedMethods, Microsoft.VisualStudio.Composition.Reflection.MethodRef? importingConstructorRef, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.ImportDefinitionBinding!>? importingConstructorImports, Microsoft.VisualStudio.Composition.CreationPolicy partCreationPolicy, bool isSharingBoundaryInferred, System.Collections.Generic.IEnumerable<System.Reflection.AssemblyName!>! extraInputAssemblies) -> void
Microsoft.VisualStudio.Composition.ComposablePartDefinition.OnImportsSatisfiedMethodRefs.get -> System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.Reflection.MethodRef!>!
Microsoft.VisualStudio.Composition.ComposablePartDefinition.OnImportsSatisfiedMethods.get -> System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo!>!
Microsoft.VisualStudio.Composition.ImportMetadataViewConstraint.MetadatumRequirement.MetadatumRequirement(Microsoft.VisualStudio.Composition.Reflection.TypeRef! metadatumValueTypeRef, bool isMetadataumValueRequired) -> void
Microsoft.VisualStudio.Composition.Reflection.MemberRef.MemberRef(Microsoft.VisualStudio.Composition.Reflection.TypeRef! declaringType, System.Reflection.MemberInfo! cachedMemberInfo) -> void
Microsoft.VisualStudio.Composition.RuntimeComposition.RuntimePart.OnImportsSatisfiedMethodRefs.get -> System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.Reflection.MethodRef!>!
Microsoft.VisualStudio.Composition.RuntimeComposition.RuntimePart.RuntimePart(Microsoft.VisualStudio.Composition.Reflection.TypeRef! type, Microsoft.VisualStudio.Composition.Reflection.MethodRef? importingConstructor, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.RuntimeComposition.RuntimeImport!>! importingConstructorArguments, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.RuntimeComposition.RuntimeImport!>! importingMembers, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.RuntimeComposition.RuntimeExport!>! exports, System.Collections.Generic.IReadOnlyList<Microsoft.VisualStudio.Composition.Reflection.MethodRef!>! onImportsSatisfiedMethods, string? sharingBoundary) -> void
override Microsoft.VisualStudio.Composition.Reflection.MethodRef.ToString() -> string!
static Microsoft.VisualStudio.Composition.ExportProvider.TryGetExportingAssemblyName<T>(System.Lazy<T>! export, out System.Reflection.AssemblyName? assemblyName) -> bool